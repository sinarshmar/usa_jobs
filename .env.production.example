# Production Environment Configuration
# Use secret management service in production (e.g., Google Secret Manager)
# DO NOT commit actual production values to version control

# ====================
# USAJobs API Configuration
# ====================
# Fetch from secret manager at runtime
USAJOBS_API_KEY=${SECRET_MANAGER_API_KEY}
USAJOBS_API_URL=https://data.usajobs.gov/api/search

# ====================
# Search Parameters
# ====================
DEFAULT_LOCATION=Chicago
KEYWORD="data engineering"

# ====================
# Database Configuration (Production)
# ====================
# Use managed database service with SSL
DATABASE_URL=${SECRET_MANAGER_DB_URL}
# Example formats:
# - Google Cloud SQL: postgresql://user:${DB_PASSWORD}@/dbname?host=/cloudsql/PROJECT:REGION:INSTANCE&sslmode=require
# - Supabase: postgresql://postgres:[password]@db.[project].supabase.co:5432/postgres?sslmode=require
# - Neon: postgresql://user:password@host.neon.tech:5432/dbname?sslmode=require

# Individual DB params (if not using DATABASE_URL)
DB_HOST=${SECRET_MANAGER_DB_HOST}
DB_PORT=5432
DB_NAME=usa_jobs
DB_USER=${SECRET_MANAGER_DB_USER}
DB_PASSWORD=${SECRET_MANAGER_DB_PASSWORD}

# ====================
# Logging Configuration
# ====================
# Less verbose in production
LOG_LEVEL=WARNING

# ====================
# API Performance Settings
# ====================
DEFAULT_PAGE_SIZE=100        # USAJobs API maximum per page
MAX_PAGES=50                 # Higher limit for production
MAX_RETRIES=5                # More retries in production

# ====================
# Rate Limiting & Timeouts
# ====================
REQUEST_TIMEOUT=45            # Longer timeout for production stability
MIN_REQUEST_INTERVAL=1.0     # More conservative rate limiting
INITIAL_RETRY_DELAY=2        # Longer initial delay
MAX_RETRY_DELAY=120          # Higher max delay for production

# ====================
# Database Performance
# ====================
BATCH_COMMIT_SIZE=500        # Larger batches in production

# ====================
# Parallel Processing
# ====================
# Enable for production scale
ENABLE_PARALLEL=true         # Enable parallel processing
MAX_WORKERS=4                # Use 4 workers in production

# ====================
# Feature Flags
# ====================
ENABLE_SALARY_ANALYSIS=true  # Enable in production
ENABLE_LOCATION_STATS=true   # Enable in production
DRY_RUN_MODE=false           # Never dry run in production

# ====================
# Production-Specific Settings
# ====================
# Monitoring
ENABLE_MONITORING=true
ENABLE_METRICS=true
MONITORING_API_KEY=${SECRET_MANAGER_MONITORING_KEY}

# Alerting
ALERT_EMAIL=devops@company.com
SLACK_WEBHOOK_URL=${SECRET_MANAGER_SLACK_WEBHOOK}

# Security
VALIDATE_SSL_CERTS=true
ENABLE_AUDIT_LOGGING=true

# ====================
# Cloud Run Specific (Auto-set by platform)
# ====================
# PORT=8080
# K_SERVICE=usajobs-etl
# K_REVISION=usajobs-etl-v1
# K_CONFIGURATION=usajobs-etl

# ====================
# Deployment Instructions
# ====================
# 1. Create secrets in Google Secret Manager:
#    gcloud secrets create usajobs-api-key --data-file=-
#    gcloud secrets create database-url --data-file=-
#
# 2. Grant Cloud Run service account access:
#    gcloud secrets add-iam-policy-binding usajobs-api-key \
#      --member=serviceAccount:SERVICE_ACCOUNT@PROJECT.iam.gserviceaccount.com \
#      --role=roles/secretmanager.secretAccessor
#
# 3. Deploy with secret references:
#    gcloud run deploy usajobs-etl \
#      --set-secrets="USAJOBS_API_KEY=usajobs-api-key:latest" \
#      --set-secrets="DATABASE_URL=database-url:latest"
#
# 4. For local testing with production-like config:
#    cp .env.production.example .env.production
#    # Fill in actual values
#    export $(grep -v '^#' .env.production | xargs)